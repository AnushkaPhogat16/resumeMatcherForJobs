{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anush\\\\OneDrive\\\\Desktop\\\\DUI\\\\projorsomethin\\\\frontend\\\\src\\\\components\\\\UploadResume.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { uploadResume, matchJobs } from '../api';\nimport ExperienceForm from './ExperienceForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadResume() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [name, setName] = useState('');\n  const [matches, setMatches] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [candidateId, setCandidateId] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    if (!file || !name) {\n      setError('Name and PDF file required.');\n      return;\n    }\n    setLoading(true);\n    try {\n      const fd = new FormData();\n      fd.append('resume', file);\n      fd.append('name', name);\n      const res = await uploadResume(fd);\n      setCandidateId(res.data._id);\n      const jobs = await matchJobs(res.data._id);\n      setMatches(jobs.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Network error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg font-bold\",\n      children: \"Upload Resume & Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"flex items-center space-x-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        className: \"border px-2 py-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"application/pdf\",\n        onChange: e => setFile(e.target.files[0]),\n        className: \"border px-2 py-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: loading,\n        className: \"px-3 py-1 bg-blue-500 text-white rounded\",\n        children: loading ? 'Uploading…' : 'Upload & Match'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 mt-2\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), candidateId && /*#__PURE__*/_jsxDEV(ExperienceForm, {\n      candidateId: candidateId,\n      onAdded: () => {\n        matchJobs(candidateId).then(res => setMatches(res.data));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"mt-4 space-y-1\",\n      children: matches.map(j => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"border p-2 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: j.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 39\n        }, this), \"Req: \", j.requirements.join(', ')]\n      }, j._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadResume, \"QVGl0Bak53rOHuljJDUUMcTcDK8=\");\n_c = UploadResume;\nvar _c;\n$RefreshReg$(_c, \"UploadResume\");","map":{"version":3,"names":["React","useState","uploadResume","matchJobs","ExperienceForm","jsxDEV","_jsxDEV","UploadResume","_s","file","setFile","name","setName","matches","setMatches","loading","setLoading","error","setError","candidateId","setCandidateId","handleSubmit","e","preventDefault","fd","FormData","append","res","data","_id","jobs","err","_err$response","_err$response$data","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","accept","files","disabled","onAdded","then","map","j","title","requirements","join","_c","$RefreshReg$"],"sources":["C:/Users/anush/OneDrive/Desktop/DUI/projorsomethin/frontend/src/components/UploadResume.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { uploadResume, matchJobs } from '../api';\r\nimport ExperienceForm from './ExperienceForm';\r\n\r\nexport default function UploadResume() {\r\n  const [file, setFile]       = useState(null);\r\n  const [name, setName]       = useState('');\r\n  const [matches, setMatches] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError]     = useState('');\r\n  const [candidateId, setCandidateId] = useState('');\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setError('');\r\n    if (!file || !name) {\r\n      setError('Name and PDF file required.');\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const fd = new FormData();\r\n      fd.append('resume', file);\r\n      fd.append('name', name);\r\n      const res = await uploadResume(fd);\r\n      setCandidateId(res.data._id);\r\n      const jobs = await matchJobs(res.data._id);\r\n      setMatches(jobs.data);\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Network error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-6\">\r\n      <h2 className=\"text-lg font-bold\">Upload Resume & Match</h2>\r\n      <form onSubmit={handleSubmit} className=\"flex items-center space-x-2\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n          onChange={e => setName(e.target.value)}\r\n          className=\"border px-2 py-1\"\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          accept=\"application/pdf\"\r\n          onChange={e => setFile(e.target.files[0])}\r\n          className=\"border px-2 py-1\"\r\n        />\r\n        <button disabled={loading} className=\"px-3 py-1 bg-blue-500 text-white rounded\">\r\n          {loading ? 'Uploading…' : 'Upload & Match'}\r\n        </button>\r\n      </form>\r\n      {error && <div className=\"text-red-500 mt-2\">{error}</div>}\r\n      {candidateId && (\r\n        <ExperienceForm\r\n          candidateId={candidateId}\r\n          onAdded={() => {\r\n            matchJobs(candidateId).then(res => setMatches(res.data));\r\n          }}\r\n        />\r\n      )}\r\n      <ul className=\"mt-4 space-y-1\">\r\n        {matches.map(j => (\r\n          <li key={j._id} className=\"border p-2 rounded\">\r\n            <strong>{j.title}</strong><br />\r\n            Req: {j.requirements.join(', ')}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}